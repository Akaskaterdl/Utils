package com.akaskaterdl.utils;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;

/**
 * Date工具
 * @author Akaskaterdl
 *
 *	2016-5-19
 */
 public class DateUtil {
 
  //定义2016-05-19 14:30:00格式
	public final static String FORMAT_TIME = "yyyy-MM-dd HH:mm:ss";
	//定义2016-05-19格式
	public final static String FORMAT_DATE = "yyyy-MM-dd";
	//定义20160519143000格式
	public final static String FORMAT_TIME_SHORT = "yyyyMMddHHmmss";
	//定义20150519格式
	public final static String FORMAT_DATE_SHORT = "yyyyMMdd";
	public final static int UNIT_YEAR = 1;
	public final static int UNIT_MONTH = 2;
	public final static int UNIT_DAY = 3;
	
	/**
	 * 指定日期的加减
	 * @author Akaskaterdl
	 *
	 * @param strDate
	 * @param timeUnit
	 * @param numVal
	 * @param field
	 * @return
	 * 2016-5-19
	 */
	public static String getAddDate(String strDate,int timeUnit, int numVal,String field) {
		SimpleDateFormat sdf = new SimpleDateFormat(field);
		Date date = null;
		try{
			//字符串转date
			date = sdf.parse(strDate);
		}catch(ParseException e){
			return null;
		}
		Calendar c = Calendar.getInstance();
		//date转Calendar
		c.setTime(date);
		//加减日期
		if(timeUnit == UNIT_YEAR){
			c.add(Calendar.YEAR, numVal);
		}else if(timeUnit == UNIT_MONTH){
			c.add(Calendar.MONTH, numVal);
		}else if(timeUnit == UNIT_DAY){
			c.add(Calendar.DATE, numVal);
		}
		//Calendar转Date
		date = c.getTime();
		return sdf.format(date);
	}

	/**
	 * 计算两个日期相差的天数
	 * @author Akaskaterdl
	 *
	 * @param args
	 * 2016-5-19
	 */
	public static int  dayDiffer(Date first, Date second){
		long firstTimer = first.getTime();
		long secondTimer = second.getTime();
		long time =Math.abs(firstTimer - secondTimer);
		return (int)(time/(24*60*60*1000));
	}
	
	/**
	 * 指定日期获取Date
	 * @author Akaskaterdl
	 *
	 * @param date
	 * @param field
	 * @return
	 * 2016-5-19
	 */
	public static Date getAssignDate(String date, String field) {
		SimpleDateFormat sdf = new SimpleDateFormat(field);
		try {
			return sdf.parse(date);
		} catch (ParseException e) {
			return null;
		}
	}
	
	/**
	 * 指定时间获取字符串时间
	 * @author Akasakterdl
	 *
	 * @param date
	 * @param field
	 * @return
	 * 2016-5-19
	 */
	public static String getAssignDate(Date date,String field){
		if(date == null) {
			return "";
		}
		SimpleDateFormat sdf = new SimpleDateFormat(field);
		return sdf.format(date);
	}
	
	/**
	 * 转换成短格式
	 * @author Akaskaterdl
	 *
	 * @param date
	 * @return
	 * 2016-6-3
	 */
	public static String getShortDate(String date) {
		if(date.length() <= 10) {
			return date;
		}
		return date.substring(0, 10);
	}
	
	
}
